
[handler:storage.content.new]
# pipeline = replication
pipeline =
# pipeline = webhook

[handler:storage.content.update]
# pipeline = replication
pipeline =

[handler:storage.content.append]
# pipeline = replication
pipeline =
# pipeline = webhook

[handler:storage.content.broken]
pipeline = content_rebuild

[handler:storage.content.deleted]
# pipeline = content_cleaner replication
pipeline = content_cleaner

[handler:storage.content.drained]
# pipeline = content_cleaner replication
pipeline = content_cleaner
# pipeline = webhook content_cleaner

[handler:storage.content.perfectible]
pipeline = content_improve

[handler:storage.container.new]
# pipeline = account_update replication
pipeline = account_update

[handler:storage.container.update]
# pipeline = replication
pipeline =

[handler:storage.container.deleted]
# pipeline = account_update replication
pipeline = account_update

[handler:storage.container.state]
pipeline = account_update

[handler:storage.chunk.new]
pipeline = volume_index

[handler:storage.chunk.deleted]
pipeline = volume_index

[handler:storage.meta2.deleted]
pipeline = volume_index

[handler:account.services]
pipeline = account_update volume_index

[filter:content_cleaner]
use = egg:oio#content_cleaner
# Allowed parameters:
# - backoff_factor (float, 0),
# - concurrency (int, 3)
# - max_retries (int, 0),
# - pool_connections (int, 32),
# - pool_maxsize (int, 32),
# - timeout (float, 5.0)

[filter:account_update]
use = egg:oio#account_update
# Timeouts to the account service, in seconds
#connection_timeout=2.0
#read_timeout=30.0

[filter:volume_index]
use = egg:oio#volume_index

[filter:content_rebuild]
use = egg:oio#notify
tube = oio-rebuild
queue_url = ${QUEUE_URL}

[filter:replication]
use = egg:oio#replicate
tube = oio-repli
queue_url = ${QUEUE_URL}
# Timeouts to the account service (telling if the replication
# is enabled or not for each bucket).
#connection_timeout=2.0
#read_timeout=30.0

# How long (seconds) and how many responses from the account service
# to keep in cache. Notice that the cache is per worker process.
#cache_duration=30.0
#cache_size=10000


[filter:noop]
use = egg:oio#noop

[filter:content_improve]
use = egg:oio#notify
tube = oio-improve
queue_url = beanstalk://127.0.0.1:6009
# Exclude accounts and/or specific containers.
# Account and container names must be urlencoded.
# Values are separated with commas.
#exclude = account/container
#exclude = account1,account2,account3
#exclude = account1/container1,account2,account3/container1

[filter:webook]
use = egg:oio#webhook
endpoint = http://localhost:8000/invoke

[filter:logger]
use = egg:oio#logger

[filter:bury]
use = egg:oio#bury
