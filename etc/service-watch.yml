# Service host
host: 127.0.0.1
# Service port
port: 8080
# Service type
type: rawx
# Rise (number of consecutive successful checks to switch status to up)
rise: 1
# Fall (number of consecutive unsuccessful checks to switch status to down)
fall: 1
# Location of the service (used to check distance between services)
location: hem.oio.srv1.vol1
# List of load balancer slots in which the service must appear
slots:
    - rawx
    - rawx-europe
    - rawx-ssd
    - rawx-europe-ssd

########################
# Checks configuration #
########################
checks:
# General check configuration
# timeout: 1.0, timeout for check

# ASN.1 ping check.
# Can be used for meta0, meta1 or meta2 services.
    - {type: asn1}

# Http Check
# Perform a GET on specified uri
# Success if 200
# uri: uri to check
# Note: you can override host and port
    - {type: http, uri: /info}

# TCP Check
# Perform a connect on specified host:port
# Note: you can override host and port
    - {type: tcp}

#######################
# Stats configuration #
#######################
stats:
# Collect statistics from a beanstalkd service.
    - {type: beanstalkd}

# Perform a GET on specified host:port/path
# and decode one statistic by line.
# Only lines starting with "stat." will be reported to conscience.
    - {type: http, path: /stat}

# Perform a GET on specified host:port/path
# and decode a JSON object.
# Only records starting with "stat." will be reported to conscience.
    - {type: http, path: /status, parser: json}

# Collect statistics from meta0, meta1 or meta2 services.
    - {type: meta}

# Collect statistics from an oioproxy service.
    - {type: oioproxy}

# Perform a GET on specified host:port/path
# and decode known rawx statistics.
    - {type: rawx, path: /stat}

# Collect system statistics like CPU usage
    - {type: system}

# Collect file system volume statistics like IO and space usage
    - {type: volume, path: /usr/lib/oio/rawx-1}
