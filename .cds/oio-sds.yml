name: oio-sds
version: v2.0

workflow:
  root:
    pipeline: oio-sds-root
    application: oio-sds
    optional: true
    payload:
      git.author: ""
      git.branch: "master"
      git.hash: ""
      git.hash.before: ""
      git.message: ""
      git.repository: "OPENIO/oio-sds"
      git.tag: ""
      with_build: "false"

  tests-fast:
    pipeline: oio-sds-test-fast
    environment: oio-sds-env-test-fast
    application: oio-sds
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-lifecycle:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-lifecycle
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-lint:
    pipeline: oio-sds-lint
    application: oio-sds
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-single:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-single
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-cli:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-cli
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-ec:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-ec
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-fullrepli:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-fullrepli
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-rebuilder:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-rebuilder
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  tests-mover:
    pipeline: oio-sds-test-functional
    application: oio-sds
    environment: oio-sds-env-mover
    depends_on:
      - root
    conditions:
      script: |+
        return cds_triggered_by_username ~= "cds.scheduler"

  coverage:
    pipeline: oio-sds-coverage
    application: oio-sds
    depends_on:
      - tests-cli
      - tests-ec
      - tests-fast
      - tests-fullrepli
      - tests-lifecycle
      - tests-lint
      - tests-mover
      - tests-rebuilder
      - tests-single
    when:
      - success

  mirror:
    pipeline: oio-sds-mirror
    application: oio-sds
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.proj.mirror_to_github
          operator: eq
          value: "true"

  build:
    pipeline: oio-sds-build
    application: oio-sds
    depends_on:
      - root
    conditions:
      script: |+
        return (
          cds_triggered_by_username ~= "cds.scheduler"
          and (cds_manual == "true" or with_build == "true")
        )

  clean-artifacts:
    pipeline: oio-sds-clean-artifacts
    application: oio-sds
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: eq
          value: "cds.scheduler"

metadata:
  default_tags: git.branch,git.author,git.tag

retention_policy:
  # Keep Run for 365 days if git_branch is set and exists in VCS or only 2 days for removed branches
  # Else keep Run for 365 days if no git_branch info is set
  if(cds_triggered_by_username == 'cds.scheduler') then
    return run_days_before < 1
  end
  if(has_git_branch == "true") then
    if(git_branch_exist == "true") then
      return run_days_before < 365
    else
      return run_days_before < 2
    end
  else
    return run_days_before < 365
  end

integrations:
  artifactory-pu-objectstorage-default:
    type: artifact_manager

notifications:
  - type: vcs
    settings:
      on_success: always
      template:
        disable_comment: true

hooks:
  root:
    - type: Scheduler
      config:
        # twice a day
        cron: "7 13,21 * * *"
        timezone: UTC
