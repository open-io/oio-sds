sudo: required
dist: trusty
language: c
install:
  - sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse"
  - sudo apt-add-repository "deb http://mirror.openio.io/pub/repo/openio/sds/15.12/ trusty/"
  - sudo apt-get update -qq
  - sudo apt-get install -y --force-yes lcov libglib2.0-dev libzookeeper-mt-dev libzmq3-dev libcurl4-gnutls-dev libapreq2-dev libsqlite3-dev libattr1-dev libevent-dev apache2 apache2-dev libapache2-mod-wsgi liblzo2-dev openio-gridinit openio-asn1c libjson-c-dev flex bison curl libleveldb1 libleveldb-dev libattr1-dev python-all-dev python-virtualenv beanstalkd liberasurecode-dev
  - sudo apt-get install -y --force-yes zookeeper zookeeper-bin zookeeperd
  - virtualenv $HOME/oio && source $HOME/oio/bin/activate
  - pip install --upgrade pip setuptools virtualenv tox
  - pip install --upgrade -r all-requirements.txt
  - pip install --upgrade -r test-requirements.txt
  - pip install --upgrade zkpython
env:
  - TEST_SUITE=build-release
  - TEST_SUITE=unit
  - TEST_SUITE=single
  - TEST_SUITE=worm
  - TEST_SUITE=slave
  - TEST_SUITE=repli
  - TEST_SUITE=ec
script:
  - export CMAKE_OPTS='-DCMAKE_INSTALL_PREFIX=/tmp/oio -DLD_LIBDIR=lib -DZK_LIBDIR=/usr/lib -DZK_INCDIR=/usr/include/zookeeper -DAPACHE2_LIBDIR=/usr/lib/apache2 -DAPACHE2_INCDIR=/usr/include/apache2 -DAPACHE2_MODDIR=/tmp/oio/lib/apache2/module'
  - if [ -n "$COVERAGE" ] ; then export PYTHON_COVERAGE=1 ; fi
  - mkdir /tmp/oio && source $HOME/oio/bin/activate
  - if [ "$TEST_SUITE" == 'build-release' ] ; then cmake ${CMAKE_OPTS} -DCMAKE_BUILD_TYPE="Release" . && make all && make clean ; fi
  - cmake ${CMAKE_OPTS} -DCMAKE_BUILD_TYPE="Debug" . && make all install
  - export G_DEBUG_LEVEL=D PATH="$PATH:/tmp/oio/bin" LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/tmp/oio/lib"
  - if [ -n "$COVERAGE" ] ; then make coverage_init ; fi
  - python setup.py install
  - pwd && env && ./tools/oio-travis-tests.sh
  - if [ -n "$COVERAGE" ] ; then make coverage && gcovr -r . | cut -c1-63 && coverage report ; fi
